OR SEQUENCE REPORT
SELECT P.LOANDATE, P.PAWNTICKET,
  C.FIRSTNAME || ' ' || C.LASTNAME AS CLIENT,
    P2.ORNUM, P2.ORDATE, P.NETAMOUNT, P.RENEWDUE, P.REDEEMDUE, P.STATUS
FROM
  TBLPAWN P
    INNER JOIN TBLPAWN P2
    ON P2.OLDTICKET = P.PAWNTICKET
    INNER JOIN TBLCLIENT C
    ON C.CLIENTID = P.CLIENTID
WHERE
  P.LOANDATE BETWEEN '6/1/2016' AND '6/30/2016'

========================================

  OUTSTANDING
SELECT PAWNTICKET,STATUS, LOANDATE, AUCTIONDATE, CLIENT,DESCRIPTION,PRINCIPAL, ORDATE, OLDTICKET
FROM
(
  SELECT *
  FROM PAWNING
  WHERE (Status = 'NEW' OR Status = 'RENEW')
  AND LOANDATE <= '3/31/2016'
  UNION
  SELECT *
  FROM PAWNING
  WHERE (Status = 'RENEWED')
  AND LOANDATE <= '3/31/2016' AND ORDATE > '3/31/2016'
  UNION
  SELECT *
  FROM PAWNING
  WHERE (Status = 'REDEEM')
  AND LOANDATE <= '3/31/2016' AND ORDATE > '3/31/2016'
  UNION
  SELECT *
  FROM PAWNING
  WHERE (Status = 'SEGRE')
  AND LOANDATE <= '3/31/2016' AND (PULLOUT > '3/31/2016' OR PULLOUT IS NULL)
  UNION
  SELECT *
  FROM PAWNING
  WHERE (Status = 'WITHDRAW')
  AND LOANDATE <= '3/31/2016' AND PULLOUT > '3/31/2016'
)
ORDER BY PAWNTICKET ASC
=====================================================

SELECT ORDATE, 
COUNT(CASE STATUS WHEN 'X' THEN PAWNTICKET ELSE 0 END) AS COUNT_REDEEM,
SUM(CASE STATUS WHEN 'X' THEN PRINCIPAL ELSE 0 END) AS PRINCIPAL_REDEEM,
SUM(CASE STATUS WHEN 'X' THEN INTEREST ELSE 0 END) AS INTEREST_REDEEM,
COUNT(CASE STATUS WHEN '0' THEN PAWNTICKET WHEN 'R' THEN PAWNTICKET ELSE 0 END) AS COUNT_RENEW,
SUM(CASE STATUS WHEN '0' THEN PRINCIPAL WHEN 'R' THEN PRINCIPAL ELSE 0 END) AS PRINCIPAL_RENEW,
SUM(CASE STATUS WHEN '0' THEN INTEREST WHEN 'R' THEN INTEREST ELSE 0 END) AS INTEREST_RENEW
FROM TBLPAWN
WHERE ORDATE BETWEEN '12/1/2015' AND '12/31/15'
GROUP BY 1

===============
SELECT ORDATE, 
SUM(CASE WHEN STATUS = 'X' THEN 1 ELSE 0 END) AS COUNT_REDEEM,
SUM(CASE STATUS WHEN 'X' THEN PRINCIPAL ELSE 0 END) AS PRINCIPAL_REDEEM,
SUM(CASE STATUS WHEN 'X' THEN INTEREST + PENALTY ELSE 0 END) AS INTEREST_REDEEM,
SUM(CASE STATUS WHEN 'X' THEN SERVICECHARGE ELSE 0 END) AS SC_REDEEM,
SUM(CASE STATUS WHEN 'X' THEN PRINCIPAL + INTEREST + PENALTY + SERVICECHARGE ELSE 0 END) as TOTAL_REDEEM,
SUM(CASE STATUS WHEN '0' THEN 1 WHEN 'R' THEN 1 ELSE 0 END) AS COUNT_RENEW,
SUM(CASE STATUS WHEN '0' THEN PRINCIPAL WHEN 'R' THEN PRINCIPAL ELSE 0 END) AS PRINCIPAL_RENEW,
SUM(CASE STATUS WHEN '0' THEN INTEREST + PENALTY WHEN 'R' THEN INTEREST + PENALTY ELSE 0 END) AS INTEREST_RENEW,
SUM(CASE STATUS WHEN '0' THEN SERVICECHARGE ELSE 0 END) AS SC_RENEW,
SUM(CASE STATUS WHEN '0' THEN PRINCIPAL + INTEREST + PENALTY + SERVICECHARGE 
	WHEN 'R' THEN PRINCIPAL + INTEREST + PENALTY + SERVICECHARGE ELSE 0 END) as TOTAL_RENEW
FROM TBLPAWN
WHERE ORDATE BETWEEN '12/1/2015' AND '12/31/15'
GROUP BY 1

=================================
EXTENSION AND RENEWAL
SELECT LOANDATE, 
	SUM(CASE ITEMTYPE WHEN 'CEL' THEN 1 ELSE 0 END) AS CEL_COUNT,
	SUM(CASE ITEMTYPE WHEN 'CEL' THEN PRINCIPAL ELSE 0 END) AS CEL_PRINCIPAL,
	SUM(CASE ITEMTYPE WHEN 'JWL' THEN 1 ELSE 0 END) AS JWL_COUNT,
	SUM(CASE ITEMTYPE WHEN 'JWL' THEN PRINCIPAL ELSE 0 END) AS JWL_PRINCIPAL,
	SUM(CASE ITEMTYPE WHEN 'APP' THEN 1 WHEN 'BIG' THEN 1 ELSE 0 END) AS APP_COUNT,
	SUM(CASE ITEMTYPE WHEN 'APP' THEN PRINCIPAL
	WHEN 'BIG' THEN PRINCIPAL ELSE 0 END) AS APP_PRINCIPAL,
	SUM(CASE STATUS WHEN 'L' THEN 1 ELSE 0 END) AS LOAN_COUNT,
	SUM(CASE STATUS WHEN 'L' THEN PRINCIPAL ELSE 0 END) AS LOAN_PRINCIPAL,
	SUM(CASE STATUS WHEN '0' THEN 1 WHEN 'R' THEN 1 ELSE 0 END) AS RENEW_COUNT,
	SUM(CASE STATUS WHEN '0' THEN PRINCIPAL 
	WHEN 'R' THEN PRINCIPAL ELSE 0 END) AS RENEW_PRINCIPAL
FROM TBLPAWN
WHERE (STATUS = 'L' OR STATUS = '0' OR STATUS = 'R')
GROUP BY 1;


Schedule of Redeem and Renewal
Schedule of Loan and Renewal

===============================
MONEY TRANSFER
SELECT 
	ServiceType, TransDate,
    CASE
      WHEN ServiceType = 'Pera Padala' AND MoneyTrans = 0
      THEN 'ME# ' || LPAD(TransID,5,0)
	  WHEN ServiceType = 'Pera Padala' AND MoneyTrans = 1
      THEN 'MR# ' || LPAD(TransID,5,0)
      ELSE RefNum END as RefNum,
    CASE MoneyTrans
      WHEN 0 THEN NETAMOUNT 
      ELSE 0 END AS PAYOUT,
    CASE MoneyTrans
      WHEN 1 THEN NETAMOUNT 
      ELSE 0 END AS SENDOUT,
    ServiceCharge
FROM
	TBLMONEYTRANSFER
WHERE
	Status = 'A';

=============================================
PAWNING
CREATE VIEW PAWNING 
AS
SELECT 
  P.PAWNTICKET, P.LOANDATE, P.MATUDATE, P.EXPIRYDATE, P.AUCTIONDATE, 
    C.FIRSTNAME || ' ' || C.LASTNAME AS CLIENT,
  C.ADDR_STREET || ' ' || C.ADDR_CITY || ' ' || C.ADDR_CITY || ' ' || C.ADDR_ZIP as FULLADDRESS,
    CASE 
      WHEN P.ITEMTYPE = 'JWL' AND (P.DESCRIPTION = Null OR P.DESCRIPTION = '') THEN 
          CLASS.CATEGORY || ' ' || ROUND(P.GRAMS,2) || 'G ' || P.KARAT || 'K'
        ELSE P.DESCRIPTION
    END AS Description, 
    P.ORNUM, P.ORDATE, P.OLDTICKET, P.NETAMOUNT, P.RENEWDUE, P.REDEEMDUE, P.APPRAISAL, P.PRINCIPAL, 
    P.INTEREST, P.ADVINT, P.SERVICECHARGE,P.PENALTY, P.ITEMTYPE, CLASS.CATEGORY, P.GRAMS, P.KARAT,
    CASE P.STATUS
      WHEN '0' THEN 'RENEWED'
        WHEN 'R' THEN 'RENEW'
        WHEN 'L' THEN 'NEW'
        WHEN 'V' THEN 'VOID'
        WHEN 'W' THEN 'WITHDRAW'
        WHEN 'X' THEN 'REDEEM'
        WHEN 'S' THEN 'SEGRE'
        ELSE 'N/A'
    END AS STATUS, P.PULLOUT , USR.USERNAME as APPRAISER
FROM TBLPAWN P
INNER JOIN TBLCLIENT C 
  ON C.CLIENTID = P.CLIENTID
LEFT JOIN TBLCLASS CLASS
  ON CLASS.CLASSID = P.CATID
LEFT JOIN tbl_Gamit USR
    ON USR.USERID = P.APPRAISERID;

==========================================================
INVENTORY
SELECT 
  ITM.ITEMCODE, ITM.DESCRIPTION, ITM.CATEGORIES, ITM.SUBCAT,
  COALESCE(ITM.ONHAND - SUM(TBL.QTY),ITM.ONHAND) AS ACTUAL,
    ITM.ONHAND
FROM (
--INVENTORY IN
SELECT 
    'IN' as TYPE, I.DOCDATE, IL.ITEMCODE, IL.QTY
FROM INV I
INNER JOIN INVLINES IL
ON I.DOCID = IL.DOCID
WHERE I.DOCDATE > '12/5/2016'

UNION
--SALES
SELECT 
    'SALES' AS TYPE, D.DOCDATE, DL.ITEMCODE, DL.QTY * -1
FROM DOC D
INNER JOIN DOCLINES DL
ON D.DOCID = DL.DOCID
WHERE D.DOCDATE > '12/5/2016'
) TBL
RIGHT JOIN ITEMMASTER ITM
ON ITM.ITEMCODE = TBL.ITEMCODE
WHERE ITM.ONHAND <> 0
GROUP BY 
  ITM.ITEMCODE, ITM.DESCRIPTION, ITM.CATEGORIES, ITM.SUBCAT, ITM.ONHAND

==========================================================
STOCK CARD VIEW
--IN
SELECT
 'IN' AS DOCTYPE, I.DOCDATE, I.REFNUM, IL.ITEMCODE, IL.DESCRIPTION, IL.QTY
FROM
 INVLINES IL
 INNER JOIN INV I
 ON I.DOCID = IL.DOCID

UNION
--OUT
SELECT
 (
  CASE D.DOCTYPE 
      WHEN 0 THEN 'SALES'
        WHEN 1 THEN 'SALES'
        WHEN 2 THEN 'RECALL'
        WHEN 3 THEN 'RETURNS'
        WHEN 4 THEN 'STOCKOUT'
    END
 ) , D.DOCDATE, D.CODE AS REFNUM, DL.ITEMCODE, DL.DESCRIPTION, DL.QTY
FROM
 DOCLINES DL
 INNER JOIN DOC D
 ON D.DOCID = DL.DOCID
