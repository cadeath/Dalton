ITEMMASTER =====================================================================
Changelog 11/25/2016
 - Added Field Update_Time in ITEMMASTER

CREATE TABLE ITEMMASTER (
  ITEMID BIGINT NOT NULL,
  ITEMCODE VARCHAR(20),
  DESCRIPTION VARCHAR(255),
  BARCODE VARCHAR(25),
  CATEGORIES VARCHAR(50),
  SUBCAT VARCHAR(50),
  UOM VARCHAR(20),
  UNITPRICE NUMERIC(12, 3) DEFAULT '0.0' NOT NULL,
  SALEPRICE NUMERIC(12, 3) DEFAULT '0.0' NOT NULL,
  MINDEV DECIMAL(12, 2) DEFAULT '0.0' NOT NULL,
  ISSALE SMALLINT DEFAULT '0' NOT NULL,
  ISINV SMALLINT DEFAULT '1' NOT NULL,
  ONHOLD SMALLINT DEFAULT '0' NOT NULL,
  COMMENTS VARCHAR(255),
  ONHAND DECIMAL(12, 2) DEFAULT '0.0' NOT NULL,
  ADD_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP(0) NOT NULL,
  UPDATE_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP(0) NOT NULL);


ALTER TABLE ITEMMASTER ADD PRIMARY KEY (ITEMID);


SET TERM ^ ;

CREATE TRIGGER BI_ITEMMASTER_ITEMID FOR ITEMMASTER
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.ITEMID IS NULL) THEN
      NEW.ITEMID = GEN_ID(ITEMMASTER_ITEMID_GEN, 1);
END^

SET TERM ; ^
ITEMMASTER =====================================================================



DOC=============================================================================
CREATE TABLE DOC (
  DOCID BIGINT NOT NULL,
  DOCTYPE SMALLINT DEFAULT '0' NOT NULL,
  MOP VARCHAR(1) DEFAULT 'C' NOT NULL,
  CODE VARCHAR(20) NOT NULL,
  CUSTOMER VARCHAR(50) DEFAULT 'One-Time Customer',
  DOCDATE DATE DEFAULT CURRENT_TIMESTAMP(0) NOT NULL,
  NOVAT NUMERIC(12, 2),
  VATRATE DECIMAL(12, 2),
  VATTOTAL NUMERIC(12, 2),
  DOCTOTAL DECIMAL(12, 3) DEFAULT '0.0' NOT NULL,
  STATUS VARCHAR(1) DEFAULT '1' NOT NULL,
  REMARKS VARCHAR(255),
  SYSTEMDATE DATE DEFAULT CURRENT_TIMESTAMP(0) NOT NULL,
  USERID INTEGER DEFAULT '0' NOT NULL);


ALTER TABLE DOC ADD PRIMARY KEY (DOCID);


SET TERM ^ ;

CREATE TRIGGER BI_DOC_DOCID FOR DOC
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.DOCID IS NULL) THEN
      NEW.DOCID = GEN_ID(DOC_DOCID_GEN, 1);
END^

SET TERM ; ^
DOC=============================================================================


DOCLINES========================================================================
CREATE TABLE DOCLINES (
  DLID BIGINT NOT NULL,
  DOCID BIGINT DEFAULT '0' NOT NULL,
  ITEMCODE VARCHAR(20) NOT NULL,
  DESCRIPTION VARCHAR(255) NOT NULL,
  QTY DECIMAL(12, 2) DEFAULT '0.0' NOT NULL,
  UNITPRICE DECIMAL(12, 2) DEFAULT '0.0' NOT NULL,
  SALEPRICE DECIMAL(12, 2) DEFAULT '0.0' NOT NULL,
  ROWTOTAL NUMERIC(12, 2) DEFAULT '0.0' NOT NULL,
  UOM VARCHAR(20),
  REMARKS VARCHAR(255));


ALTER TABLE DOCLINES ADD PRIMARY KEY (DLID);


SET TERM ^ ;

CREATE TRIGGER BI_DOCLINES_DLID FOR DOCLINES
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.DLID IS NULL) THEN
      NEW.DLID = GEN_ID(DOCLINES_DLID_GEN, 1);
END^

SET TERM ; ^
DOCLINES========================================================================

INV=============================================================================
CREATE TABLE INV (
  DOCID BIGINT NOT NULL,
  DOCNUM VARCHAR(20) NOT NULL,
  DOCDATE DATE,
  PARTNER VARCHAR(50) DEFAULT '' NOT NULL,
  GRANDTOTAL NUMERIC(12, 2) DEFAULT '0.0' NOT NULL,
  REMARKS VARCHAR(255),
  DOCSTATUS VARCHAR(20) DEFAULT '1' NOT NULL,
  REFNUM VARCHAR(20));


ALTER TABLE INV ADD PRIMARY KEY (DOCID);


SET TERM ^ ;

CREATE TRIGGER BI_INV_DOCID FOR INV
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.DOCID IS NULL) THEN
      NEW.DOCID = GEN_ID(INV_DOCID_GEN, 1);
END^

SET TERM ; ^
INV=============================================================================


INVLINES========================================================================
CREATE TABLE INVLINES (
  INVID BIGINT NOT NULL,
  DOCID BIGINT NOT NULL,
  ITEMCODE VARCHAR(20),
  DESCRIPTION VARCHAR(255),
  QTY DECIMAL(12, 3) DEFAULT '0.0' NOT NULL,
  UNITPRICE DECIMAL(12, 2) DEFAULT '0.0' NOT NULL,
  SALEPRICE DECIMAL(12, 2) DEFAULT '0.0',
  ROWTOTAL NUMERIC(12, 2) DEFAULT '0.0' NOT NULL,
  UOM VARCHAR(20),
  REMARKS VARCHAR(255));


ALTER TABLE INVLINES ADD PRIMARY KEY (INVID);


SET TERM ^ ;

CREATE TRIGGER BI_INVLINES_INVID FOR INVLINES
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.INVID IS NULL) THEN
      NEW.INVID = GEN_ID(INVLINES_INVID_GEN, 1);
END^

SET TERM ; ^
INVLINES========================================================================